{
  "stats": {
    "suites": 1,
    "tests": 14,
    "passes": 14,
    "pending": 0,
    "failures": 0,
    "start": "2022-09-09T03:15:51.946Z",
    "end": "2022-09-09T03:16:11.828Z",
    "duration": 19882,
    "testsRegistered": 14,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8d254259-bb2e-4e6a-a8f8-cb5413d92120",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/actions.cy.js",
      "file": "cypress/e2e/2-advanced-examples/actions.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a07cdd58-702a-4678-8a9d-bf1fe6530caf",
          "title": "Actions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".type() - type into a DOM element",
              "fullTitle": "Actions .type() - type into a DOM element",
              "timedOut": null,
              "duration": 5152,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/type\ncy.get(\".action-email\").type(\"fake@email.com\").should(\"have.value\", \"fake@email.com\") // .type() with special character sequences\n.type(\"{leftarrow}{rightarrow}{uparrow}{downarrow}\").type(\"{del}{selectall}{backspace}\") // .type() with key modifiers\n.type(\"{alt}{option}\") //these are equivalent\n.type(\"{ctrl}{control}\") //these are equivalent\n.type(\"{meta}{command}{cmd}\") //these are equivalent\n.type(\"{shift}\") // Delay each keypress by 0.1 sec\n.type(\"slow.typing@email.com\", {\n  delay: 100\n}).should(\"have.value\", \"slow.typing@email.com\");\ncy.get(\".action-disabled\") // Ignore error checking prior to type\n// like whether the input is visible or disabled\n.type(\"disabled error checking\", {\n  force: true\n}).should(\"have.value\", \"disabled error checking\");",
              "err": {},
              "uuid": "dbec6f2d-9be4-467e-9235-e7954273707e",
              "parentUUID": "a07cdd58-702a-4678-8a9d-bf1fe6530caf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".focus() - focus on a DOM element",
              "fullTitle": "Actions .focus() - focus on a DOM element",
              "timedOut": null,
              "duration": 313,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focus\ncy.get(\".action-focus\").focus().should(\"have.class\", \"focus\").prev().should(\"have.attr\", \"style\", \"color: orange;\");",
              "err": {},
              "uuid": "451a0f40-1ee5-4c5d-b1c5-2e4cbdc1f045",
              "parentUUID": "a07cdd58-702a-4678-8a9d-bf1fe6530caf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".blur() - blur off a DOM element",
              "fullTitle": "Actions .blur() - blur off a DOM element",
              "timedOut": null,
              "duration": 579,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/blur\ncy.get(\".action-blur\").type(\"About to blur\").blur().should(\"have.class\", \"error\").prev().should(\"have.attr\", \"style\", \"color: red;\");",
              "err": {},
              "uuid": "af8ff991-9b0c-4730-ab4c-fd86fb7aec7d",
              "parentUUID": "a07cdd58-702a-4678-8a9d-bf1fe6530caf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".clear() - clears an input or textarea element",
              "fullTitle": "Actions .clear() - clears an input or textarea element",
              "timedOut": null,
              "duration": 701,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clear\ncy.get(\".action-clear\").type(\"Clear this text\").should(\"have.value\", \"Clear this text\").clear().should(\"have.value\", \"\");",
              "err": {},
              "uuid": "e3be26ee-8ee8-473f-83c6-2e69552e3448",
              "parentUUID": "a07cdd58-702a-4678-8a9d-bf1fe6530caf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".submit() - submit a form",
              "fullTitle": "Actions .submit() - submit a form",
              "timedOut": null,
              "duration": 540,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/submit\ncy.get(\".action-form\").find('[type=\"text\"]').type(\"HALFOFF\");\ncy.get(\".action-form\").submit().next().should(\"contain\", \"Your form has been submitted!\");",
              "err": {},
              "uuid": "fbcb4ffd-a8b4-4968-a79e-d9f46ff1c2f0",
              "parentUUID": "a07cdd58-702a-4678-8a9d-bf1fe6530caf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".click() - click on a DOM element",
              "fullTitle": "Actions .click() - click on a DOM element",
              "timedOut": null,
              "duration": 3413,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/click\ncy.get(\".action-btn\").click(); // You can click on 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// clicking in the center of the element is the default\ncy.get(\"#action-canvas\").click();\ncy.get(\"#action-canvas\").click(\"topLeft\");\ncy.get(\"#action-canvas\").click(\"top\");\ncy.get(\"#action-canvas\").click(\"topRight\");\ncy.get(\"#action-canvas\").click(\"left\");\ncy.get(\"#action-canvas\").click(\"right\");\ncy.get(\"#action-canvas\").click(\"bottomLeft\");\ncy.get(\"#action-canvas\").click(\"bottom\");\ncy.get(\"#action-canvas\").click(\"bottomRight\"); // .click() accepts an x and y coordinate\n// that controls where the click occurs :)\ncy.get(\"#action-canvas\").click(80, 75) // click 80px on x coord and 75px on y coord\n.click(170, 75).click(80, 165).click(100, 185).click(125, 190).click(150, 185).click(170, 165); // click multiple elements by passing multiple: true\ncy.get(\".action-labels>.label\").click({\n  multiple: true\n}); // Ignore error checking prior to clicking\ncy.get(\".action-opacity>.btn\").click({\n  force: true\n});",
              "err": {},
              "uuid": "13be1a26-c236-4b3e-acb1-33777fa1b047",
              "parentUUID": "a07cdd58-702a-4678-8a9d-bf1fe6530caf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".dblclick() - double click on a DOM element",
              "fullTitle": "Actions .dblclick() - double click on a DOM element",
              "timedOut": null,
              "duration": 366,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/dblclick\n// Our app has a listener on 'dblclick' event in our 'scripts.js'\n// that hides the div and shows an input on double click\ncy.get(\".action-div\").dblclick().should(\"not.be.visible\");\ncy.get(\".action-input-hidden\").should(\"be.visible\");",
              "err": {},
              "uuid": "cb122014-73b0-4c83-b81d-6ab2b09f46f5",
              "parentUUID": "a07cdd58-702a-4678-8a9d-bf1fe6530caf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".rightclick() - right click on a DOM element",
              "fullTitle": "Actions .rightclick() - right click on a DOM element",
              "timedOut": null,
              "duration": 349,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/rightclick\n// Our app has a listener on 'contextmenu' event in our 'scripts.js'\n// that hides the div and shows an input on right click\ncy.get(\".rightclick-action-div\").rightclick().should(\"not.be.visible\");\ncy.get(\".rightclick-action-input-hidden\").should(\"be.visible\");",
              "err": {},
              "uuid": "920e4afa-f117-4721-b6a0-6217ec9f2ccc",
              "parentUUID": "a07cdd58-702a-4678-8a9d-bf1fe6530caf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".check() - check a checkbox or radio element",
              "fullTitle": "Actions .check() - check a checkbox or radio element",
              "timedOut": null,
              "duration": 1474,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/check\n// By default, .check() will check all\n// matching checkbox or radio elements in succession, one after another\ncy.get('.action-checkboxes [type=\"checkbox\"]').not(\"[disabled]\").check().should(\"be.checked\");\ncy.get('.action-radios [type=\"radio\"]').not(\"[disabled]\").check().should(\"be.checked\"); // .check() accepts a value argument\ncy.get('.action-radios [type=\"radio\"]').check(\"radio1\").should(\"be.checked\"); // .check() accepts an array of values\ncy.get('.action-multiple-checkboxes [type=\"checkbox\"]').check([\"checkbox1\", \"checkbox2\"]).should(\"be.checked\"); // Ignore error checking prior to checking\ncy.get(\".action-checkboxes [disabled]\").check({\n  force: true\n}).should(\"be.checked\");\ncy.get('.action-radios [type=\"radio\"]').check(\"radio3\", {\n  force: true\n}).should(\"be.checked\");",
              "err": {},
              "uuid": "e442f414-1810-4a14-b836-0da28675dac8",
              "parentUUID": "a07cdd58-702a-4678-8a9d-bf1fe6530caf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".uncheck() - uncheck a checkbox element",
              "fullTitle": "Actions .uncheck() - uncheck a checkbox element",
              "timedOut": null,
              "duration": 1389,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/uncheck\n// By default, .uncheck() will uncheck all matching\n// checkbox elements in succession, one after another\ncy.get('.action-check [type=\"checkbox\"]').not(\"[disabled]\").uncheck().should(\"not.be.checked\"); // .uncheck() accepts a value argument\ncy.get('.action-check [type=\"checkbox\"]').check(\"checkbox1\").uncheck(\"checkbox1\").should(\"not.be.checked\"); // .uncheck() accepts an array of values\ncy.get('.action-check [type=\"checkbox\"]').check([\"checkbox1\", \"checkbox3\"]).uncheck([\"checkbox1\", \"checkbox3\"]).should(\"not.be.checked\"); // Ignore error checking prior to unchecking\ncy.get(\".action-check [disabled]\").uncheck({\n  force: true\n}).should(\"not.be.checked\");",
              "err": {},
              "uuid": "fc0125c6-8191-4936-89dc-e245e0573bf5",
              "parentUUID": "a07cdd58-702a-4678-8a9d-bf1fe6530caf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".select() - select an option in a <select> element",
              "fullTitle": "Actions .select() - select an option in a <select> element",
              "timedOut": null,
              "duration": 1252,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/select\n// at first, no option should be selected\ncy.get(\".action-select\").should(\"have.value\", \"--Select a fruit--\"); // Select option(s) with matching text content\ncy.get(\".action-select\").select(\"apples\"); // confirm the apples were selected\n// note that each value starts with \"fr-\" in our HTML\ncy.get(\".action-select\").should(\"have.value\", \"fr-apples\");\ncy.get(\".action-select-multiple\").select([\"apples\", \"oranges\", \"bananas\"]) // when getting multiple values, invoke \"val\" method first\n.invoke(\"val\").should(\"deep.equal\", [\"fr-apples\", \"fr-oranges\", \"fr-bananas\"]); // Select option(s) with matching value\ncy.get(\".action-select\").select(\"fr-bananas\") // can attach an assertion right away to the element\n.should(\"have.value\", \"fr-bananas\");\ncy.get(\".action-select-multiple\").select([\"fr-apples\", \"fr-oranges\", \"fr-bananas\"]).invoke(\"val\").should(\"deep.equal\", [\"fr-apples\", \"fr-oranges\", \"fr-bananas\"]); // assert the selected values include oranges\ncy.get(\".action-select-multiple\").invoke(\"val\").should(\"include\", \"fr-oranges\");",
              "err": {},
              "uuid": "49de5ce5-60b9-486c-9b27-d05cf9493a63",
              "parentUUID": "a07cdd58-702a-4678-8a9d-bf1fe6530caf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".scrollIntoView() - scroll an element into view",
              "fullTitle": "Actions .scrollIntoView() - scroll an element into view",
              "timedOut": null,
              "duration": 224,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollintoview\n// normally all of these buttons are hidden,\n// because they're not within\n// the viewable area of their parent\n// (we need to scroll to see them)\ncy.get(\"#scroll-horizontal button\").should(\"not.be.visible\"); // scroll the button into view, as if the user had scrolled\ncy.get(\"#scroll-horizontal button\").scrollIntoView().should(\"be.visible\");\ncy.get(\"#scroll-vertical button\").should(\"not.be.visible\"); // Cypress handles the scroll direction needed\ncy.get(\"#scroll-vertical button\").scrollIntoView().should(\"be.visible\");\ncy.get(\"#scroll-both button\").should(\"not.be.visible\"); // Cypress knows to scroll to the right and down\ncy.get(\"#scroll-both button\").scrollIntoView().should(\"be.visible\");",
              "err": {},
              "uuid": "53fefe02-1b78-4b13-a8c2-cf64bda88a95",
              "parentUUID": "a07cdd58-702a-4678-8a9d-bf1fe6530caf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".trigger() - trigger an event on a DOM element",
              "fullTitle": "Actions .trigger() - trigger an event on a DOM element",
              "timedOut": null,
              "duration": 225,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/trigger\n// To interact with a range input (slider)\n// we need to set its value & trigger the\n// event to signal it changed\n// Here, we invoke jQuery's val() method to set\n// the value and trigger the 'change' event\ncy.get(\".trigger-input-range\").invoke(\"val\", 25).trigger(\"change\").get(\"input[type=range]\").siblings(\"p\").should(\"have.text\", \"25\");",
              "err": {},
              "uuid": "6a736189-3e42-43e4-a2d1-00ab2af050a8",
              "parentUUID": "a07cdd58-702a-4678-8a9d-bf1fe6530caf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.scrollTo() - scroll the window or element to a position",
              "fullTitle": "Actions cy.scrollTo() - scroll the window or element to a position",
              "timedOut": null,
              "duration": 2334,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollto\n// You can scroll to 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// if you chain .scrollTo() off of cy, we will\n// scroll the entire window\ncy.scrollTo(\"bottom\");\ncy.get(\"#scrollable-horizontal\").scrollTo(\"right\"); // or you can scroll to a specific coordinate:\n// (x axis, y axis) in pixels\ncy.get(\"#scrollable-vertical\").scrollTo(250, 250); // or you can scroll to a specific percentage\n// of the (width, height) of the element\ncy.get(\"#scrollable-both\").scrollTo(\"75%\", \"25%\"); // control the easing of the scroll (default is 'swing')\ncy.get(\"#scrollable-vertical\").scrollTo(\"center\", {\n  easing: \"linear\"\n}); // control the duration of the scroll (in ms)\ncy.get(\"#scrollable-both\").scrollTo(\"center\", {\n  duration: 2000\n});",
              "err": {},
              "uuid": "350e43e8-1116-4016-b974-e850ff54e24e",
              "parentUUID": "a07cdd58-702a-4678-8a9d-bf1fe6530caf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dbec6f2d-9be4-467e-9235-e7954273707e",
            "451a0f40-1ee5-4c5d-b1c5-2e4cbdc1f045",
            "af8ff991-9b0c-4730-ab4c-fd86fb7aec7d",
            "e3be26ee-8ee8-473f-83c6-2e69552e3448",
            "fbcb4ffd-a8b4-4968-a79e-d9f46ff1c2f0",
            "13be1a26-c236-4b3e-acb1-33777fa1b047",
            "cb122014-73b0-4c83-b81d-6ab2b09f46f5",
            "920e4afa-f117-4721-b6a0-6217ec9f2ccc",
            "e442f414-1810-4a14-b836-0da28675dac8",
            "fc0125c6-8191-4936-89dc-e245e0573bf5",
            "49de5ce5-60b9-486c-9b27-d05cf9493a63",
            "53fefe02-1b78-4b13-a8c2-cf64bda88a95",
            "6a736189-3e42-43e4-a2d1-00ab2af050a8",
            "350e43e8-1116-4016-b974-e850ff54e24e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18311,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}