{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2022-09-09T03:17:12.477Z",
    "end": "2022-09-09T03:17:16.124Z",
    "duration": 3647,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "9684628c-552b-414a-b339-3b30a4c64eed",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/querying.cy.js",
      "file": "cypress/e2e/2-advanced-examples/querying.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a2fd7a1b-ac6f-47fb-8b9e-751d6fb509ab",
          "title": "Querying",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.get() - query DOM elements",
              "fullTitle": "Querying cy.get() - query DOM elements",
              "timedOut": null,
              "duration": 456,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/get\ncy.get(\"#query-btn\").should(\"contain\", \"Button\");\ncy.get(\".query-btn\").should(\"contain\", \"Button\");\ncy.get(\"#querying .well>button:first\").should(\"contain\", \"Button\"); //              â†²\n// Use CSS selectors just like jQuery\ncy.get('[data-test-id=\"test-example\"]').should(\"have.class\", \"example\"); // 'cy.get()' yields jQuery object, you can get its attribute\n// by invoking `.attr()` method\ncy.get('[data-test-id=\"test-example\"]').invoke(\"attr\", \"data-test-id\").should(\"equal\", \"test-example\"); // or you can get element's CSS property\ncy.get('[data-test-id=\"test-example\"]').invoke(\"css\", \"position\").should(\"equal\", \"static\"); // or use assertions directly during 'cy.get()'\n// https://on.cypress.io/assertions\ncy.get('[data-test-id=\"test-example\"]').should(\"have.attr\", \"data-test-id\", \"test-example\").and(\"have.css\", \"position\", \"static\");",
              "err": {},
              "uuid": "d5316daf-1686-4a50-aa44-6b389eafff4b",
              "parentUUID": "a2fd7a1b-ac6f-47fb-8b9e-751d6fb509ab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.contains() - query DOM elements with matching content",
              "fullTitle": "Querying cy.contains() - query DOM elements with matching content",
              "timedOut": null,
              "duration": 204,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/contains\ncy.get(\".query-list\").contains(\"bananas\").should(\"have.class\", \"third\"); // we can pass a regexp to `.contains()`\ncy.get(\".query-list\").contains(/^b\\w+/).should(\"have.class\", \"third\");\ncy.get(\".query-list\").contains(\"apples\").should(\"have.class\", \"first\"); // passing a selector to contains will\n// yield the selector containing the text\ncy.get(\"#querying\").contains(\"ul\", \"oranges\").should(\"have.class\", \"query-list\");\ncy.get(\".query-button\").contains(\"Save Form\").should(\"have.class\", \"btn\");",
              "err": {},
              "uuid": "8e5a9afe-4863-47ec-8ff3-28b5604ec806",
              "parentUUID": "a2fd7a1b-ac6f-47fb-8b9e-751d6fb509ab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".within() - query DOM elements within a specific element",
              "fullTitle": "Querying .within() - query DOM elements within a specific element",
              "timedOut": null,
              "duration": 151,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/within\ncy.get(\".query-form\").within(() => {\n  cy.get(\"input:first\").should(\"have.attr\", \"placeholder\", \"Email\");\n  cy.get(\"input:last\").should(\"have.attr\", \"placeholder\", \"Password\");\n});",
              "err": {},
              "uuid": "8004cc94-a5e1-49b6-8524-7121b796f173",
              "parentUUID": "a2fd7a1b-ac6f-47fb-8b9e-751d6fb509ab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.root() - query the root DOM element",
              "fullTitle": "Querying cy.root() - query the root DOM element",
              "timedOut": null,
              "duration": 158,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/root\n// By default, root is the document\ncy.root().should(\"match\", \"html\");\ncy.get(\".query-ul\").within(() => {\n  // In this within, the root is now the ul DOM element\n  cy.root().should(\"have.class\", \"query-ul\");\n});",
              "err": {},
              "uuid": "53b74c21-2f89-4b09-a444-dcec399c7f24",
              "parentUUID": "a2fd7a1b-ac6f-47fb-8b9e-751d6fb509ab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "best practices - selecting elements",
              "fullTitle": "Querying best practices - selecting elements",
              "timedOut": null,
              "duration": 985,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/best-practices#Selecting-Elements\ncy.get(\"[data-cy=best-practices-selecting-elements]\").within(() => {\n  // Worst - too generic, no context\n  cy.get(\"button\").click(); // Bad. Coupled to styling. Highly subject to change.\n  cy.get(\".btn.btn-large\").click(); // Average. Coupled to the `name` attribute which has HTML semantics.\n  cy.get(\"[name=submission]\").click(); // Better. But still coupled to styling or JS event listeners.\n  cy.get(\"#main\").click(); // Slightly better. Uses an ID but also ensures the element\n  // has an ARIA role attribute\n  cy.get(\"#main[role=button]\").click(); // Much better. But still coupled to text content that may change.\n  cy.contains(\"Submit\").click(); // Best. Insulated from all changes.\n  cy.get(\"[data-cy=submit]\").click();\n});",
              "err": {},
              "uuid": "f49eeab0-2c15-4162-bb98-7b6de0163ec4",
              "parentUUID": "a2fd7a1b-ac6f-47fb-8b9e-751d6fb509ab",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d5316daf-1686-4a50-aa44-6b389eafff4b",
            "8e5a9afe-4863-47ec-8ff3-28b5604ec806",
            "8004cc94-a5e1-49b6-8524-7121b796f173",
            "53b74c21-2f89-4b09-a444-dcec399c7f24",
            "f49eeab0-2c15-4162-bb98-7b6de0163ec4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1954,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}